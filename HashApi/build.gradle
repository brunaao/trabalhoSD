apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'

application {
    mainClassName = 'br.ufu.sd.client.ui.Menu'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

// Note: for IntelliJ IDE to mark the generated files as source.
sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }
}

// Note: Make sure to modify the gRPC version if it is no
// longer compatible w/ the latest gradle version.
//
// Visit https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
def grpcVersion = '1.29.0'

dependencies {
    repositories {
        mavenCentral()
    }
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.2'
    compile "org.apache.ratis:ratis-server:1.0.0"
    compile "org.apache.ratis:ratis-netty:1.0.0"
    compile "org.apache.ratis:ratis-grpc:1.0.0"
    compile "com.beust:jcommander:1.78"
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "org.slf4j:slf4j-log4j12:1.7.25"
    compile "org.slf4j:slf4j-api:1.2.17"

    compileOnly group: "javax.annotation", name: "javax.annotation-api", version: "1.3.2"
    compileOnly group: "org.jetbrains", name: "annotations", version: "13.0"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.2'
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

//task client(type: CreateStartScripts) {
//    mainClassName = 'br.ufu.sd.client.GrpcClient'
//    applicationName = 'client'
//    outputDir = new File(project.buildDir, 'tmp')
//    classpath = startScripts.classpath
//}

task menu(type: JavaExec) {
    group = "Execution"
    description = "Run the UI that calls the client for GRPC"
    classpath = startScripts.classpath
    main = "br.ufu.sd.client.ui.Menu"
}

task server(type: JavaExec) {
    group = "Execution"
    description = "Run the server for GRPC"
    classpath = startScripts.classpath
    main = "br.ufu.sd.server.HashTableServer"
}

task teste(type: JavaExec) {
    group = "Execution"
    description = "Run the server for GRPC"
    classpath = startScripts.classpath
    main = "br.ufu.sd.client.TestClient"
}